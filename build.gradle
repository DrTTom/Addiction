buildscript {
   repositories {
      jcenter()
   }
}

plugins {
  id 'com.github.spotbugs' version '1.6.2'
  id 'com.github.ben-manes.versions' version '0.20.0'
  // id 'net.ltgt.errorprone' version '0.0.13' lots of false positives, contradicts PMD rules
}

apply plugin: 'application'
apply plugin: 'pmd'
apply plugin: 'jacoco'

pmd {
    toolVersion = '6.4.0'
    ruleSetFiles = files("pmd_config.xml")
}

repositories {
   mavenCentral()
}

version = '0.3'
group = 'de.tautenhahn.dependencies'

check.dependsOn jacocoTestReport

dependencies {
   compile ('com.sparkjava:spark-core:2.7.2')
   {
      exclude module: "websocket-client"
      exclude module: "jetty-webapp"
      exclude module: "jetty-xml"
   }
   compile 'com.google.code.gson:gson:2.8.5'
   runtime 'org.slf4j:slf4j-simple:1.8.0-beta2'
   testCompile 'org.slf4j:slf4j-simple:1.8.0-beta2' // there is a security warning for all earlier versions
   testCompile ("junit:junit:4.12")
   {
      exclude module: "hamcrest-core"
   }
   testCompile 'org.hamcrest:hamcrest-all:1.3'
}

mainClassName = 'de.tautenhahn.dependencies.Main'
applicationDefaultJvmArgs = ['-Dorg.slf4j.simpleLogger.logFile=GordianKnotServer.log']

jar {
   classifier = 'core'
   exclude '**/rest/*'
   exclude '**/Main.class'
   includeEmptyDirs = false
}

task jarServer(type:Jar) {
   classifier = 'server'
   from (sourceSets.main.output) {
      include '**/rest/**/*'
      include '**/Main.class'
   }
   includeEmptyDirs = false
}

task jarTest(type:Jar) {
   classifier = 'test'
   from (sourceSets.test.output)
   {
      include '**/commontests/*'
   }
   includeEmptyDirs = false
}

distZip {
   from (jarServer)
   {
      into "${project.name}-${project.version}/lib"
   }
}

distTar {
   from (jarServer)
   {
      into "${project.name}-${project.version}/lib"
   }
}

tasks.withType(CreateStartScripts) {
   classpath= files(jarServer) +classpath
}

assemble.dependsOn jarServer
assemble.dependsOn jarTest

run {
   args = [sourceSets.test.runtimeClasspath.asPath, 'GordianKnot']
}
